// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  photo    String?
  userName String  @unique
  phone    String  @unique
  name     String

  FromChat Chat[] @relation("FromUser")
  ToChat   Chat[] @relation("ToUser")

  FromMessage Message[] @relation("FromUser")
  ToMessage   Message[] @relation("ToUser")

  groups        Group[]
  groupMessage GroupMessage[]
  

  createdAt     DateTime       @default(now())
}

model Chat {
  id       String    @id @default(uuid())
  from     User      @relation("FromUser", fields: [fromId], references: [id])
  fromId   String
  to       User      @relation("ToUser", fields: [toId], references: [id])
  toId     String

  Message  Message[]
  createdAt DateTime  @default(now())
}

model Message {
  id       String   @id @default(uuid())
  from     User     @relation("FromUser", fields: [fromId], references: [id])
  fromId   String
  to       User    @relation("ToUser", fields: [toId], references: [id])
  toId     String
  chat     Chat     @relation(fields: [chatId], references: [id])
  chatId   String
  text     String
  createdAt DateTime @default(now())
}

model Group {
  id           String         @id @default(uuid())
  name         String
  groupName    String         @unique
  users        User[]
  createdAt    DateTime       @default(now())
  GroupMessage GroupMessage[]
}

model GroupMessage {
  id      String @id @default(uuid())
  from    User   @relation(fields: [userId], references: [id])
  userId  String
  group   Group  @relation(fields: [groupId], references: [id])
  groupId String
  text String
  createdAt DateTime @default(now())
}
